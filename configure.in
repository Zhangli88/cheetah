#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT(event.c)
AM_INIT_AUTOMAKE(EL, version-0.1)

AC_CONFIG_HEADER(config.h)

# Checks for programs.
AC_PROG_CC

# Checks for libraries.
AC_CHECK_LIB(pthread, pthread_create)

# Checks for header files.
AC_CHECK_HEADERS([fcntl.h memory.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([memset select])

# Checks whether we are on windows
onwin32=false
AC_MSG_CHECKING([for win32])
AC_TRY_COMPILE(
,
#ifndef WIN32
not on windows
#endif,
onwin32=true;AC_MSG_RESULT([yes]),
AC_MSG_RESULT([no])
)

# Checks for typedefs, structures and compiler characteristics.
AC_MSG_CHECKING([for struct timeval])
AC_CHECK_TYPE(struct timeval, 
			AC_MSG_RESULT([yes]),
			AC_MSG_RESULT([no]),
			[ #ifdef WIN32
			  #include <Winsock2.h>
			  #else
			  #include <sys/time.h>
			  #endif
			])
AC_DEFINE(NOLOG,  0, [Define to 1 if we don't want log messages.])
# Checks for polling mechanisms.

# Checks whether the epoll syscall is supported
AC_CHECK_FUNC(epoll_ctl, 
	[AC_DEFINE(HAVE_EPOLL,1,
		[Define to 1 if the system supports epoll polling mechanism])],)

# Checks whether the poll syscall is supported
AC_CHECK_FUNC(poll, 
	[AC_DEFINE(HAVE_POLL,1,
		[Define to 1if the system supports poll polling mechanism])],)
AC_OUTPUT(Makefile)
